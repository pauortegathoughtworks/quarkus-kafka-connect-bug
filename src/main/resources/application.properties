org.acme.KafkaConnectorRestClient/mp-rest/url=${KAFKA_CONNECTOR_URL}

kafka-distributed.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
kafka-distributed.cleanup.policy=${KAFKA_CLEANUP_POLICY:compact}
kafka-distributed.retention.ms=${KAFKA_RETENTION_MS:31540000000}
kafka-distributed.config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
kafka-distributed.config.providers=file
kafka-distributed.config.storage.replication.factor=${KAFKA_CONFIG_STORAGE_REPLICATION}
kafka-distributed.config.storage.topic=${KAFKA_CONFIG_STORAGE_TOPIC}
kafka-distributed.consumer.isolation.level=read_committed
kafka-distributed.group.id=${KAFKA_GROUP_ID}
kafka-distributed.key.converter.schema.registry.url=${SCHEMA_REGISTRY_URL}
kafka-distributed.key.converter.schemas.enable=true
kafka-distributed.key.converter=io.confluent.connect.avro.AvroConverter
kafka-distributed.offset.flush.interval.ms=10000
kafka-distributed.offset.storage.replication.factor=${KAFKA_OFFSET_STORAGE_REPLICATION}
kafka-distributed.offset.storage.topic=${KAFKA_OFFSET_STORAGE_TOPIC}
kafka-distributed.plugin.path=${KAFKA_CONFIG_PLUGINS_PATH}
kafka-distributed.producer.security.protocol=${KAFKA_SECURITY_PROTOCOL}
kafka-distributed.producer.ssl.key.password=${KAFKA_KEYSTORE_PASSWORD}
kafka-distributed.producer.ssl.keystore.location=${KAFKA_KEY_STORE_LOCATION}
kafka-distributed.producer.ssl.keystore.password=${KAFKA_KEYSTORE_PASSWORD}
kafka-distributed.producer.ssl.truststore.location=${KAFKA_TRUST_STORE_LOCATION}
kafka-distributed.rest.advertised.host.name=kafka-data-connector
kafka-distributed.rest.advertised.port=8083
kafka-distributed.security.protocol=${KAFKA_SECURITY_PROTOCOL}
kafka-distributed.ssl.key.password=${KAFKA_KEYSTORE_PASSWORD}
kafka-distributed.ssl.keystore.location=${KAFKA_KEY_STORE_LOCATION}
kafka-distributed.ssl.keystore.password=${KAFKA_KEYSTORE_PASSWORD}
kafka-distributed.ssl.truststore.location=${KAFKA_TRUST_STORE_LOCATION}
kafka-distributed.status.storage.replication.factor=${KAFKA_STATUS_STORAGE_REPLICATION}
kafka-distributed.status.storage.topic=${KAFKA_STATUS_STORAGE_TOPIC}
kafka-distributed.value.converter.schema.registry.url=${SCHEMA_REGISTRY_URL}
kafka-distributed.value.converter.schemas.enable=true
kafka-distributed.value.converter=io.confluent.connect.avro.AvroConverter